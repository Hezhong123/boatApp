{"ast":null,"code":"\n\n'use strict';\n\nvar warnedKeys = {};\n\nfunction warnOnce(key, message) {\n  if (warnedKeys[key]) {\n    return;\n  }\n  console.warn(message);\n  warnedKeys[key] = true;\n}\nmodule.exports = warnOnce;","map":{"version":3,"names":["warnedKeys","warnOnce","key","message","console","warn","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Utilities/warnOnce.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst warnedKeys: {[string]: boolean, ...} = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nfunction warnOnce(key: string, message: string) {\n  if (warnedKeys[key]) {\n    return;\n  }\n\n  console.warn(message);\n\n  warnedKeys[key] = true;\n}\n\nmodule.exports = warnOnce;\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAMA,UAAoC,GAAG,CAAC,CAAC;;AAS/C,SAASC,QAAQ,CAACC,GAAW,EAAEC,OAAe,EAAE;EAC9C,IAAIH,UAAU,CAACE,GAAG,CAAC,EAAE;IACnB;EACF;EAEAE,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;EAErBH,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI;AACxB;AAEAI,MAAM,CAACC,OAAO,GAAGN,QAAQ"},"metadata":{},"sourceType":"script"}