{"ast":null,"code":"\n\n'use strict';\n\nvar SamplingProfiler = {\n  poke: function poke(token) {\n    var error = null;\n    var result = null;\n    try {\n      result = global.pokeSamplingProfiler();\n      if (result === null) {\n        console.log('The JSC Sampling Profiler has started');\n      } else {\n        console.log('The JSC Sampling Profiler has stopped');\n      }\n    } catch (e) {\n      console.log('Error occurred when restarting Sampling Profiler: ' + e.toString());\n      error = e.toString();\n    }\n    var NativeJSCSamplingProfiler = require(\"./NativeJSCSamplingProfiler\").default;\n    if (NativeJSCSamplingProfiler) {\n      NativeJSCSamplingProfiler.operationComplete(token, result, error);\n    }\n  }\n};\nmodule.exports = SamplingProfiler;","map":{"version":3,"names":["SamplingProfiler","poke","token","error","result","global","pokeSamplingProfiler","console","log","e","toString","NativeJSCSamplingProfiler","require","default","operationComplete","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Performance/SamplingProfiler.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst SamplingProfiler = {\n  poke: function (token: number): void {\n    let error = null;\n    let result = null;\n    try {\n      result = global.pokeSamplingProfiler();\n      if (result === null) {\n        console.log('The JSC Sampling Profiler has started');\n      } else {\n        console.log('The JSC Sampling Profiler has stopped');\n      }\n    } catch (e) {\n      console.log(\n        'Error occurred when restarting Sampling Profiler: ' + e.toString(),\n      );\n      error = e.toString();\n    }\n\n    const NativeJSCSamplingProfiler =\n      require('./NativeJSCSamplingProfiler').default;\n    if (NativeJSCSamplingProfiler) {\n      NativeJSCSamplingProfiler.operationComplete(token, result, error);\n    }\n  },\n};\n\nmodule.exports = SamplingProfiler;\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAMA,gBAAgB,GAAG;EACvBC,IAAI,EAAE,cAAUC,KAAa,EAAQ;IACnC,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAI;MACFA,MAAM,GAAGC,MAAM,CAACC,oBAAoB,EAAE;MACtC,IAAIF,MAAM,KAAK,IAAI,EAAE;QACnBG,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVF,OAAO,CAACC,GAAG,CACT,oDAAoD,GAAGC,CAAC,CAACC,QAAQ,EAAE,CACpE;MACDP,KAAK,GAAGM,CAAC,CAACC,QAAQ,EAAE;IACtB;IAEA,IAAMC,yBAAyB,GAC7BC,OAAO,+BAA+B,CAACC,OAAO;IAChD,IAAIF,yBAAyB,EAAE;MAC7BA,yBAAyB,CAACG,iBAAiB,CAACZ,KAAK,EAAEE,MAAM,EAAED,KAAK,CAAC;IACnE;EACF;AACF,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAGhB,gBAAgB"},"metadata":{},"sourceType":"script"}