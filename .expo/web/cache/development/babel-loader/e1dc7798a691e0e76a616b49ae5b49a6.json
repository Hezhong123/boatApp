{"ast":null,"code":"\n\n'use strict';\n\nif (__DEV__) {\n  var DevSettings = require(\"../Utilities/DevSettings\");\n  if (typeof DevSettings.reload !== 'function') {\n    throw new Error('Could not find the reload() implementation.');\n  }\n\n  var ReactRefreshRuntime = require('react-refresh/runtime');\n  ReactRefreshRuntime.injectIntoGlobalHook(global);\n  var Refresh = {\n    performFullRefresh: function performFullRefresh(reason) {\n      DevSettings.reload(reason);\n    },\n    createSignatureFunctionForTransform: ReactRefreshRuntime.createSignatureFunctionForTransform,\n    isLikelyComponentType: ReactRefreshRuntime.isLikelyComponentType,\n    getFamilyByType: ReactRefreshRuntime.getFamilyByType,\n    register: ReactRefreshRuntime.register,\n    performReactRefresh: function performReactRefresh() {\n      if (ReactRefreshRuntime.hasUnrecoverableErrors()) {\n        DevSettings.reload('Fast Refresh - Unrecoverable');\n        return;\n      }\n      ReactRefreshRuntime.performReactRefresh();\n      DevSettings.onFastRefresh();\n    }\n  };\n\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__ReactRefresh'] = Refresh;\n}","map":{"version":3,"names":["__DEV__","DevSettings","require","reload","Error","ReactRefreshRuntime","injectIntoGlobalHook","global","Refresh","performFullRefresh","reason","createSignatureFunctionForTransform","isLikelyComponentType","getFamilyByType","register","performReactRefresh","hasUnrecoverableErrors","onFastRefresh","__METRO_GLOBAL_PREFIX__"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Core/setUpReactRefresh.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nif (__DEV__) {\n  const DevSettings = require('../Utilities/DevSettings');\n\n  if (typeof DevSettings.reload !== 'function') {\n    throw new Error('Could not find the reload() implementation.');\n  }\n\n  // This needs to run before the renderer initializes.\n  const ReactRefreshRuntime = require('react-refresh/runtime');\n  ReactRefreshRuntime.injectIntoGlobalHook(global);\n\n  const Refresh = {\n    performFullRefresh(reason: string) {\n      DevSettings.reload(reason);\n    },\n\n    createSignatureFunctionForTransform:\n      ReactRefreshRuntime.createSignatureFunctionForTransform,\n\n    isLikelyComponentType: ReactRefreshRuntime.isLikelyComponentType,\n\n    getFamilyByType: ReactRefreshRuntime.getFamilyByType,\n\n    register: ReactRefreshRuntime.register,\n\n    performReactRefresh() {\n      if (ReactRefreshRuntime.hasUnrecoverableErrors()) {\n        DevSettings.reload('Fast Refresh - Unrecoverable');\n        return;\n      }\n      ReactRefreshRuntime.performReactRefresh();\n      DevSettings.onFastRefresh();\n    },\n  };\n\n  // The metro require polyfill can not have dependencies (applies for all polyfills).\n  // Expose `Refresh` by assigning it to global to make it available in the polyfill.\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__ReactRefresh'] = Refresh;\n}\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAIA,OAAO,EAAE;EACX,IAAMC,WAAW,GAAGC,OAAO,4BAA4B;EAEvD,IAAI,OAAOD,WAAW,CAACE,MAAM,KAAK,UAAU,EAAE;IAC5C,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;;EAGA,IAAMC,mBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;EAC5DG,mBAAmB,CAACC,oBAAoB,CAACC,MAAM,CAAC;EAEhD,IAAMC,OAAO,GAAG;IACdC,kBAAkB,8BAACC,MAAc,EAAE;MACjCT,WAAW,CAACE,MAAM,CAACO,MAAM,CAAC;IAC5B,CAAC;IAEDC,mCAAmC,EACjCN,mBAAmB,CAACM,mCAAmC;IAEzDC,qBAAqB,EAAEP,mBAAmB,CAACO,qBAAqB;IAEhEC,eAAe,EAAER,mBAAmB,CAACQ,eAAe;IAEpDC,QAAQ,EAAET,mBAAmB,CAACS,QAAQ;IAEtCC,mBAAmB,iCAAG;MACpB,IAAIV,mBAAmB,CAACW,sBAAsB,EAAE,EAAE;QAChDf,WAAW,CAACE,MAAM,CAAC,8BAA8B,CAAC;QAClD;MACF;MACAE,mBAAmB,CAACU,mBAAmB,EAAE;MACzCd,WAAW,CAACgB,aAAa,EAAE;IAC7B;EACF,CAAC;;EAIDV,MAAM,CAAC,CAACA,MAAM,CAACW,uBAAuB,IAAI,EAAE,IAAI,gBAAgB,CAAC,GAAGV,OAAO;AAC7E"},"metadata":{},"sourceType":"script"}