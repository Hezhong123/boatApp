{"ast":null,"code":"\n\n'use strict';\n\nvar JSInspector = {\n  registerAgent: function registerAgent(type) {\n    if (global.__registerInspectorAgent) {\n      global.__registerInspectorAgent(type);\n    }\n  },\n  getTimestamp: function getTimestamp() {\n    return global.__inspectorTimestamp();\n  }\n};\nmodule.exports = JSInspector;","map":{"version":3,"names":["JSInspector","registerAgent","type","global","__registerInspectorAgent","getTimestamp","__inspectorTimestamp","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/JSInspector/JSInspector.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {EventSender} from './InspectorAgent';\n\ninterface Agent {\n  constructor(eventSender: EventSender): void;\n}\n\n// Flow doesn't support static declarations in interface\ntype AgentClass = Class<Agent> & {DOMAIN: string, ...};\n\ndeclare function __registerInspectorAgent(type: AgentClass): void;\ndeclare function __inspectorTimestamp(): number;\n\nconst JSInspector = {\n  registerAgent(type: AgentClass) {\n    if (global.__registerInspectorAgent) {\n      global.__registerInspectorAgent(type);\n    }\n  },\n  getTimestamp(): number {\n    return global.__inspectorTimestamp();\n  },\n};\n\nmodule.exports = JSInspector;\n"],"mappings":";;AAUA,YAAY;;AAcZ,IAAMA,WAAW,GAAG;EAClBC,aAAa,yBAACC,IAAgB,EAAE;IAC9B,IAAIC,MAAM,CAACC,wBAAwB,EAAE;MACnCD,MAAM,CAACC,wBAAwB,CAACF,IAAI,CAAC;IACvC;EACF,CAAC;EACDG,YAAY,0BAAW;IACrB,OAAOF,MAAM,CAACG,oBAAoB,EAAE;EACtC;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGR,WAAW"},"metadata":{},"sourceType":"script"}