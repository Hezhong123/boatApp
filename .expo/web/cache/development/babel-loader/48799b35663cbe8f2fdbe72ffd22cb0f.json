{"ast":null,"code":"\n\nimport * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.get('BlobModule');\nvar constants = null;\nvar NativeBlobModule = null;\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants: function getConstants() {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler: function addNetworkingHandler() {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler: function addWebSocketHandler(id) {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler: function removeWebSocketHandler(id) {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket: function sendOverSocket(blob, socketID) {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts: function createFromParts(parts, withId) {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release: function release(blobId) {\n      NativeModule.release(blobId);\n    }\n  };\n}\nexport default NativeBlobModule;","map":{"version":3,"names":["TurboModuleRegistry","NativeModule","get","constants","NativeBlobModule","getConstants","addNetworkingHandler","addWebSocketHandler","id","removeWebSocketHandler","sendOverSocket","blob","socketID","createFromParts","parts","withId","release","blobId"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Blob/NativeBlobModule.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|} {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n"],"mappings":";;AAWA,OAAO,KAAKA,mBAAmB;AAY/B,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,GAAG,CAAO,YAAY,CAAC;AAEhE,IAAIC,SAAS,GAAG,IAAI;AACpB,IAAIC,gBAAgB,GAAG,IAAI;AAE3B,IAAIH,YAAY,IAAI,IAAI,EAAE;EACxBG,gBAAgB,GAAG;IACjBC,YAAY,0BAAyD;MACnE,IAAIF,SAAS,IAAI,IAAI,EAAE;QACrBA,SAAS,GAAGF,YAAY,CAACI,YAAY,EAAE;MACzC;MACA,OAAOF,SAAS;IAClB,CAAC;IACDG,oBAAoB,kCAAS;MAC3BL,YAAY,CAACK,oBAAoB,EAAE;IACrC,CAAC;IACDC,mBAAmB,+BAACC,EAAU,EAAQ;MACpCP,YAAY,CAACM,mBAAmB,CAACC,EAAE,CAAC;IACtC,CAAC;IACDC,sBAAsB,kCAACD,EAAU,EAAQ;MACvCP,YAAY,CAACQ,sBAAsB,CAACD,EAAE,CAAC;IACzC,CAAC;IACDE,cAAc,0BAACC,IAAY,EAAEC,QAAgB,EAAQ;MACnDX,YAAY,CAACS,cAAc,CAACC,IAAI,EAAEC,QAAQ,CAAC;IAC7C,CAAC;IACDC,eAAe,2BAACC,KAAoB,EAAEC,MAAc,EAAQ;MAC1Dd,YAAY,CAACY,eAAe,CAACC,KAAK,EAAEC,MAAM,CAAC;IAC7C,CAAC;IACDC,OAAO,mBAACC,MAAc,EAAQ;MAC5BhB,YAAY,CAACe,OAAO,CAACC,MAAM,CAAC;IAC9B;EACF,CAAC;AACH;AAEA,eAAgBb,gBAAgB"},"metadata":{},"sourceType":"module"}