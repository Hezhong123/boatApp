{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"mode\", \"edges\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n  RIGHT = 4,\n  BOTTOM = 2,\n  LEFT = 1,\n  ALL = 15;\n\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    mode = _ref.mode,\n    edges = _ref.edges,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n        margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n        _flatStyle$marginVert = flatStyle.marginVertical,\n        marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n        _flatStyle$marginHori = flatStyle.marginHorizontal,\n        marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n        _flatStyle$marginTop = flatStyle.marginTop,\n        marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n        _flatStyle$marginRigh = flatStyle.marginRight,\n        marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n        _flatStyle$marginBott = flatStyle.marginBottom,\n        marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n        _flatStyle$marginLeft = flatStyle.marginLeft,\n        marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n        padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n        _flatStyle$paddingVer = flatStyle.paddingVertical,\n        paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n        _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n        paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n        _flatStyle$paddingTop = flatStyle.paddingTop,\n        paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n        _flatStyle$paddingRig = flatStyle.paddingRight,\n        paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n        _flatStyle$paddingBot = flatStyle.paddingBottom,\n        paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n        _flatStyle$paddingLef = flatStyle.paddingLeft,\n        paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","mode","_ref","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View"],"sources":["SafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport type { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}