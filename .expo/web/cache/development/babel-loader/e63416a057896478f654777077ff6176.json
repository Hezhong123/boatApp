{"ast":null,"code":"\n\nimport * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.getEnforcing('WebSocketModule');","map":{"version":3,"names":["TurboModuleRegistry","getEnforcing"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/WebSocket/NativeWebSocketModule.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +connect: (\n    url: string,\n    protocols: ?Array<string>,\n    options: {|headers?: Object|},\n    socketID: number,\n  ) => void;\n  +send: (message: string, forSocketID: number) => void;\n  +sendBinary: (base64String: string, forSocketID: number) => void;\n  +ping: (socketID: number) => void;\n  +close: (code: number, reason: string, socketID: number) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'WebSocketModule',\n): Spec);\n"],"mappings":";;AAWA,OAAO,KAAKA,mBAAmB;AAmB/B,eAAgBA,mBAAmB,CAACC,YAAY,CAC9C,iBAAiB,CAClB"},"metadata":{},"sourceType":"module"}