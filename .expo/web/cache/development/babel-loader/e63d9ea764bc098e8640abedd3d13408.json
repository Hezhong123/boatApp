{"ast":null,"code":"\n\n'use strict';\n\nvar registerModule;\nif (global.RN$Bridgeless === true && global.RN$registerCallableModule) {\n  registerModule = global.RN$registerCallableModule;\n} else {\n  var BatchedBridge = require(\"../BatchedBridge/BatchedBridge\");\n  registerModule = function registerModule(moduleName, factory) {\n    return BatchedBridge.registerLazyCallableModule(moduleName, factory);\n  };\n}\nregisterModule('Systrace', function () {\n  return require(\"../Performance/Systrace\");\n});\nregisterModule('JSTimers', function () {\n  return require(\"./Timers/JSTimers\");\n});\nregisterModule('HeapCapture', function () {\n  return require(\"../HeapCapture/HeapCapture\");\n});\nregisterModule('SamplingProfiler', function () {\n  return require(\"../Performance/SamplingProfiler\");\n});\nregisterModule('RCTLog', function () {\n  return require(\"../Utilities/RCTLog\");\n});\nregisterModule('RCTDeviceEventEmitter', function () {\n  return require(\"../EventEmitter/RCTDeviceEventEmitter\").default;\n});\nregisterModule('RCTNativeAppEventEmitter', function () {\n  return require(\"../EventEmitter/RCTNativeAppEventEmitter\");\n});\nregisterModule('GlobalPerformanceLogger', function () {\n  return require(\"../Utilities/GlobalPerformanceLogger\");\n});\nregisterModule('JSDevSupportModule', function () {\n  return require(\"../Utilities/JSDevSupportModule\");\n});\nif (__DEV__ && !global.__RCTProfileIsProfiling) {\n  registerModule('HMRClient', function () {\n    return require(\"../Utilities/HMRClient\");\n  });\n} else {\n  registerModule('HMRClient', function () {\n    return require(\"../Utilities/HMRClientProdShim\");\n  });\n}","map":{"version":3,"names":["registerModule","global","RN$Bridgeless","RN$registerCallableModule","BatchedBridge","require","moduleName","factory","registerLazyCallableModule","default","__DEV__","__RCTProfileIsProfiling"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Core/setUpBatchedBridge.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nlet registerModule;\nif (global.RN$Bridgeless === true && global.RN$registerCallableModule) {\n  registerModule = global.RN$registerCallableModule;\n} else {\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  registerModule = (\n    moduleName:\n      | $TEMPORARY$string<'GlobalPerformanceLogger'>\n      | $TEMPORARY$string<'HMRClient'>\n      | $TEMPORARY$string<'HeapCapture'>\n      | $TEMPORARY$string<'JSDevSupportModule'>\n      | $TEMPORARY$string<'JSTimers'>\n      | $TEMPORARY$string<'RCTDeviceEventEmitter'>\n      | $TEMPORARY$string<'RCTLog'>\n      | $TEMPORARY$string<'RCTNativeAppEventEmitter'>\n      | $TEMPORARY$string<'SamplingProfiler'>\n      | $TEMPORARY$string<'Systrace'>,\n    factory,\n  ) => BatchedBridge.registerLazyCallableModule(moduleName, factory);\n}\n\nregisterModule('Systrace', () => require('../Performance/Systrace'));\nregisterModule('JSTimers', () => require('./Timers/JSTimers'));\nregisterModule('HeapCapture', () => require('../HeapCapture/HeapCapture'));\nregisterModule('SamplingProfiler', () =>\n  require('../Performance/SamplingProfiler'),\n);\nregisterModule('RCTLog', () => require('../Utilities/RCTLog'));\nregisterModule(\n  'RCTDeviceEventEmitter',\n  () => require('../EventEmitter/RCTDeviceEventEmitter').default,\n);\nregisterModule('RCTNativeAppEventEmitter', () =>\n  require('../EventEmitter/RCTNativeAppEventEmitter'),\n);\nregisterModule('GlobalPerformanceLogger', () =>\n  require('../Utilities/GlobalPerformanceLogger'),\n);\nregisterModule('JSDevSupportModule', () =>\n  require('../Utilities/JSDevSupportModule'),\n);\n\nif (__DEV__ && !global.__RCTProfileIsProfiling) {\n  registerModule('HMRClient', () => require('../Utilities/HMRClient'));\n} else {\n  registerModule('HMRClient', () => require('../Utilities/HMRClientProdShim'));\n}\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAIA,cAAc;AAClB,IAAIC,MAAM,CAACC,aAAa,KAAK,IAAI,IAAID,MAAM,CAACE,yBAAyB,EAAE;EACrEH,cAAc,GAAGC,MAAM,CAACE,yBAAyB;AACnD,CAAC,MAAM;EACL,IAAMC,aAAa,GAAGC,OAAO,kCAAkC;EAC/DL,cAAc,GAAG,wBACfM,UAUiC,EACjCC,OAAO;IAAA,OACJH,aAAa,CAACI,0BAA0B,CAACF,UAAU,EAAEC,OAAO,CAAC;EAAA;AACpE;AAEAP,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMK,OAAO,2BAA2B;AAAA,EAAC;AACpEL,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMK,OAAO,qBAAqB;AAAA,EAAC;AAC9DL,cAAc,CAAC,aAAa,EAAE;EAAA,OAAMK,OAAO,8BAA8B;AAAA,EAAC;AAC1EL,cAAc,CAAC,kBAAkB,EAAE;EAAA,OACjCK,OAAO,mCAAmC;AAAA,EAC3C;AACDL,cAAc,CAAC,QAAQ,EAAE;EAAA,OAAMK,OAAO,uBAAuB;AAAA,EAAC;AAC9DL,cAAc,CACZ,uBAAuB,EACvB;EAAA,OAAMK,OAAO,yCAAyC,CAACI,OAAO;AAAA,EAC/D;AACDT,cAAc,CAAC,0BAA0B,EAAE;EAAA,OACzCK,OAAO,4CAA4C;AAAA,EACpD;AACDL,cAAc,CAAC,yBAAyB,EAAE;EAAA,OACxCK,OAAO,wCAAwC;AAAA,EAChD;AACDL,cAAc,CAAC,oBAAoB,EAAE;EAAA,OACnCK,OAAO,mCAAmC;AAAA,EAC3C;AAED,IAAIK,OAAO,IAAI,CAACT,MAAM,CAACU,uBAAuB,EAAE;EAC9CX,cAAc,CAAC,WAAW,EAAE;IAAA,OAAMK,OAAO,0BAA0B;EAAA,EAAC;AACtE,CAAC,MAAM;EACLL,cAAc,CAAC,WAAW,EAAE;IAAA,OAAMK,OAAO,kCAAkC;EAAA,EAAC;AAC9E"},"metadata":{},"sourceType":"script"}