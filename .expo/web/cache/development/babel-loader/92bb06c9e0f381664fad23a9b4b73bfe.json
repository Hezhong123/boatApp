{"ast":null,"code":"import * as React from 'react';\nvar NavigationContent = function NavigationContent(_ref) {\n  var render = _ref.render,\n    children = _ref.children;\n  return render(children);\n};\nexport default function useComponent(render) {\n  var renderRef = React.useRef(render);\n\n  renderRef.current = render;\n  React.useEffect(function () {\n    renderRef.current = null;\n  });\n  return React.useRef(function (_ref2) {\n    var children = _ref2.children;\n    var render = renderRef.current;\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n    return React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,MAAiC;EAAA,IAA9BC,MAAF,GAAgCD,KAA9BC,MAAF;IAAUC,WAAsBF,KAAtBE;EACnC,OAAOD,MAAM,CAACC,QAAD,CAAb;AACD,CAFD;AAIA,eAAe,SAASC,YAAT,CAAsBF,MAAtB,EAAsC;EACnD,IAAMG,SAAS,GAAGN,KAAK,CAACO,MAAN,CAA4BJ,MAA5B,CAAlB;;EAKAG,SAAS,CAACE,OAAV,GAAoBL,MAApB;EAEAH,KAAK,CAACS,SAAN,CAAgB,YAAM;IACpBH,SAAS,CAACE,OAAV,GAAoB,IAApB;EACD,CAFD;EAIA,OAAOR,KAAK,CAACO,MAAN,CAAa,iBAAiD;IAAA,IAA9CH,WAA8CM,MAA9CN;IACrB,IAAMD,MAAM,GAAGG,SAAS,CAACE,OAAzB;IAEA,IAAIL,MAAM,KAAK,IAAf,EAAqB;MACnB,MAAM,IAAIQ,KAAJ,CACJ,+EADI,CAAN;IAGD;IAED,OAAOX,oBAACC,iBAAD;MAAmBE,MAAM,EAAEA;IAA3B,GAAoCC,QAApC,CAAP;EACD,CAVM,EAUJI,OAVH;AAWD","names":["React","NavigationContent","_ref","render","children","useComponent","renderRef","useRef","current","useEffect","_ref2","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"module"}