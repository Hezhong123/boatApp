{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as React from 'react';\nimport { attachRecoveredProps } from \"./RecoveryProps\";\nexport default function withExpoRoot(AppRootComponent) {\n  return function (_React$Component) {\n    _inherits(ExpoRootComponent, _React$Component);\n    var _super = _createSuper(ExpoRootComponent);\n    function ExpoRootComponent() {\n      _classCallCheck(this, ExpoRootComponent);\n      return _super.apply(this, arguments);\n    }\n    _createClass(ExpoRootComponent, [{\n      key: \"render\",\n      value: function render() {\n        var combinedProps = attachRecoveredProps(this.props);\n        return React.createElement(AppRootComponent, _objectSpread({}, combinedProps));\n      }\n    }]);\n    return ExpoRootComponent;\n  }(React.Component);\n}","map":{"version":3,"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,oBAAoB;AAG7B,eAAc,SAAUC,YAAY,CAClCC,gBAAwC;EAExC;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA,OACE,kBAAM;QACJ,IAAMC,aAAa,GAAGH,oBAAoB,CAAC,IAAI,CAACI,KAAK,CAAC;QACtD,OAAOL,oBAACG,gBAAgB,oBAAKC,aAAa,EAAI;MAChD;IAAC;IAAA;EAAA,EAJoCJ,KAAK,CAACM,SAAY;AAM3D","names":["React","attachRecoveredProps","withExpoRoot","AppRootComponent","combinedProps","props","Component"],"sourceRoot":"","sources":["../../src/launch/withExpoRoot.web.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { attachRecoveredProps } from './RecoveryProps';\nimport { InitialProps } from './withExpoRoot.types';\n\nexport default function withExpoRoot<P extends InitialProps>(\n  AppRootComponent: React.ComponentType<P>\n): React.ComponentClass<P> {\n  return class ExpoRootComponent extends React.Component<P> {\n    render() {\n      const combinedProps = attachRecoveredProps(this.props);\n      return <AppRootComponent {...combinedProps} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}