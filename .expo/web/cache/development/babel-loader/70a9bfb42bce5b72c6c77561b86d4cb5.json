{"ast":null,"code":"\n\n'use strict';\n\nimport invariant from 'invariant';\n\nvar customBubblingEventTypes = {};\nvar customDirectEventTypes = {};\nexports.customBubblingEventTypes = customBubblingEventTypes;\nexports.customDirectEventTypes = customDirectEventTypes;\nvar viewConfigCallbacks = new Map();\nvar viewConfigs = new Map();\nfunction processEventTypes(viewConfig) {\n  var bubblingEventTypes = viewConfig.bubblingEventTypes,\n    directEventTypes = viewConfig.directEventTypes;\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (var topLevelType in directEventTypes) {\n        invariant(bubblingEventTypes[topLevelType] == null, 'Event cannot be both direct and bubbling: %s', topLevelType);\n      }\n    }\n  }\n  if (bubblingEventTypes != null) {\n    for (var _topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[_topLevelType] == null) {\n        customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];\n      }\n    }\n  }\n  if (directEventTypes != null) {\n    for (var _topLevelType2 in directEventTypes) {\n      if (customDirectEventTypes[_topLevelType2] == null) {\n        customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];\n      }\n    }\n  }\n}\n\nexports.register = function (name, callback) {\n  invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);\n  invariant(typeof callback === 'function', 'View config getter callback for component `%s` must be a function (received `%s`)', name, callback === null ? 'null' : typeof callback);\n  viewConfigCallbacks.set(name, callback);\n  return name;\n};\n\nexports.get = function (name) {\n  var viewConfig;\n  if (!viewConfigs.has(name)) {\n    var callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(false, 'View config getter callback for component `%s` must be a function (received `%s`).%s', name, callback === null ? 'null' : typeof callback, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n};","map":{"version":3,"names":["invariant","customBubblingEventTypes","customDirectEventTypes","exports","viewConfigCallbacks","Map","viewConfigs","processEventTypes","viewConfig","bubblingEventTypes","directEventTypes","__DEV__","topLevelType","register","name","callback","has","set","get","test"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @flow strict-local\n * @generated SignedSource<<a5b40ebf1f5b17d6dc83479c1c597566>>\n *\n * This file was sync'd from the facebook/react repository.\n */\n\n'use strict';\n\nimport {type ViewConfig} from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nconst customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    phasedRegistrationNames: $ReadOnly<{|\n      captured: string,\n      bubbled: string,\n      skipBubbling?: ?boolean,\n    |}>,\n  |}>,\n  ...,\n} = {};\nconst customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    registrationName: string,\n  |}>,\n  ...,\n} = {};\n\nexports.customBubblingEventTypes = customBubblingEventTypes;\nexports.customDirectEventTypes = customDirectEventTypes;\n\nconst viewConfigCallbacks = new Map();\nconst viewConfigs = new Map();\n\nfunction processEventTypes(viewConfig: ViewConfig): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexports.register = function(name: string, callback: () => ViewConfig): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n};\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexports.get = function(name: string): ViewConfig {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}