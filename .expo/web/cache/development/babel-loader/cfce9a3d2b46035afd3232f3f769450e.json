{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelScheduledNotificationAsync(_x) {\n  return _cancelScheduledNotificationAsync.apply(this, arguments);\n}\nfunction _cancelScheduledNotificationAsync() {\n  _cancelScheduledNotificationAsync = _asyncToGenerator(function* (identifier) {\n    if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n    }\n    return yield NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n  });\n  return _cancelScheduledNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":";AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB;AAE5B,wBAA8BC,gCAAgC;EAAA;AAAA;AAM7D;EAAA,sDANc,WAAgDC,UAAkB;IAC/E,IAAI,CAACF,qBAAqB,CAACC,gCAAgC,EAAE;MAC3D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,kCAAkC,CAAC;;IAGpF,aAAaC,qBAAqB,CAACC,gCAAgC,CAACC,UAAU,CAAC;EACjF,CAAC;EAAA;AAAA","names":["UnavailabilityError","NotificationScheduler","cancelScheduledNotificationAsync","identifier"],"sourceRoot":"","sources":["../src/cancelScheduledNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\nexport default async function cancelScheduledNotificationAsync(identifier: string): Promise<void> {\n  if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n  }\n\n  return await NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n}\n"]},"metadata":{},"sourceType":"module"}