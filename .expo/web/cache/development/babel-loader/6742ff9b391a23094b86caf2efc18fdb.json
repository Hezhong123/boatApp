{"ast":null,"code":"\n\nvar React = require('react');\nvar Platform = require(\"../../Utilities/Platform\");\nvar _require = require(\"../../Renderer/shims/ReactNative\"),\n  findNodeHandle = _require.findNodeHandle;\nimport { Commands as AndroidTextInputCommands } from \"../../Components/TextInput/AndroidTextInputNativeComponent\";\nimport { Commands as iOSTextInputCommands } from \"../../Components/TextInput/RCTSingelineTextInputNativeComponent\";\nvar currentlyFocusedInputRef = null;\nvar inputs = new Set();\nfunction currentlyFocusedInput() {\n  return currentlyFocusedInputRef;\n}\n\nfunction currentlyFocusedField() {\n  if (__DEV__) {\n    console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');\n  }\n  return findNodeHandle(currentlyFocusedInputRef);\n}\nfunction focusInput(textField) {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\nfunction blurInput(textField) {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\nfunction focusField(textFieldID) {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n  return;\n}\nfunction blurField(textFieldID) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n  return;\n}\n\nfunction focusTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n    return;\n  }\n  if (textField != null) {\n    var _textField$currentPro;\n    var fieldCanBeFocused = currentlyFocusedInputRef !== textField &&\n    ((_textField$currentPro = textField.currentProps) == null ? void 0 : _textField$currentPro.editable) !== false;\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\nfunction blurTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('blurTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n    return;\n  }\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\nfunction registerInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n    return;\n  }\n  inputs.add(textField);\n}\nfunction unregisterInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n    return;\n  }\n  inputs.delete(textField);\n}\nfunction isTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n    return false;\n  }\n  return inputs.has(textField);\n}\nmodule.exports = {\n  currentlyFocusedInput: currentlyFocusedInput,\n  focusInput: focusInput,\n  blurInput: blurInput,\n  currentlyFocusedField: currentlyFocusedField,\n  focusField: focusField,\n  blurField: blurField,\n  focusTextInput: focusTextInput,\n  blurTextInput: blurTextInput,\n  registerInput: registerInput,\n  unregisterInput: unregisterInput,\n  isTextInput: isTextInput\n};","map":{"version":3,"names":["React","require","Platform","findNodeHandle","Commands","AndroidTextInputCommands","iOSTextInputCommands","currentlyFocusedInputRef","inputs","Set","currentlyFocusedInput","currentlyFocusedField","__DEV__","console","error","focusInput","textField","blurInput","focusField","textFieldID","blurField","focusTextInput","fieldCanBeFocused","currentProps","editable","OS","focus","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","has","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\nconst React = require('react');\nconst Platform = require('../../Utilities/Platform');\nconst {findNodeHandle} = require('../../Renderer/shims/ReactNative');\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}