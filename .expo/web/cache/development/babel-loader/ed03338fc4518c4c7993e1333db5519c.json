{"ast":null,"code":"\n\nimport NativeSourceCode from \"../../NativeModules/specs/NativeSourceCode\";\nvar _cachedDevServerURL;\nvar _cachedFullBundleURL;\nvar FALLBACK = 'http://localhost:8081/';\nfunction getDevServer() {\n  var _cachedDevServerURL2;\n  if (_cachedDevServerURL === undefined) {\n    var scriptUrl = NativeSourceCode.getConstants().scriptURL;\n    var match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n  return {\n    url: (_cachedDevServerURL2 = _cachedDevServerURL) != null ? _cachedDevServerURL2 : FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null\n  };\n}\nmodule.exports = getDevServer;","map":{"version":3,"names":["NativeSourceCode","_cachedDevServerURL","_cachedFullBundleURL","FALLBACK","getDevServer","undefined","scriptUrl","getConstants","scriptURL","match","url","fullBundleUrl","bundleLoadedFromServer","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeSourceCode from '../../NativeModules/specs/NativeSourceCode';\n\nlet _cachedDevServerURL: ?string;\nlet _cachedFullBundleURL: ?string;\nconst FALLBACK = 'http://localhost:8081/';\n\ntype DevServerInfo = {\n  url: string,\n  fullBundleUrl: ?string,\n  bundleLoadedFromServer: boolean,\n  ...\n};\n\n/**\n * Many RN development tools rely on the development server (packager) running\n * @return URL to packager with trailing slash\n */\nfunction getDevServer(): DevServerInfo {\n  if (_cachedDevServerURL === undefined) {\n    const scriptUrl = NativeSourceCode.getConstants().scriptURL;\n    const match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n\n  return {\n    url: _cachedDevServerURL ?? FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\n  };\n}\n\nmodule.exports = getDevServer;\n"],"mappings":";;AAUA,OAAOA,gBAAgB;AAEvB,IAAIC,mBAA4B;AAChC,IAAIC,oBAA6B;AACjC,IAAMC,QAAQ,GAAG,wBAAwB;AAazC,SAASC,YAAY,GAAkB;EAAA;EACrC,IAAIH,mBAAmB,KAAKI,SAAS,EAAE;IACrC,IAAMC,SAAS,GAAGN,gBAAgB,CAACO,YAAY,EAAE,CAACC,SAAS;IAC3D,IAAMC,KAAK,GAAGH,SAAS,CAACG,KAAK,CAAC,mBAAmB,CAAC;IAClDR,mBAAmB,GAAGQ,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IAC7CP,oBAAoB,GAAGO,KAAK,GAAGH,SAAS,GAAG,IAAI;EACjD;EAEA,OAAO;IACLI,GAAG,0BAAET,mBAAmB,mCAAIE,QAAQ;IACpCQ,aAAa,EAAET,oBAAoB;IACnCU,sBAAsB,EAAEX,mBAAmB,KAAK;EAClD,CAAC;AACH;AAEAY,MAAM,CAACC,OAAO,GAAGV,YAAY"},"metadata":{},"sourceType":"module"}