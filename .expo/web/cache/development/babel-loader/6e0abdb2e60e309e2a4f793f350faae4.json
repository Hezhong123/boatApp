{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { CommonActions } from '@react-navigation/routers';\nexport var NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  var methods = [].concat(_toConsumableArray(Object.keys(CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var listeners = {};\n  var removeListener = function removeListener(event, callback) {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(function (cb) {\n        return cb !== callback;\n      });\n    }\n  };\n  var current = null;\n  var ref = _objectSpread({\n    get current() {\n      return current;\n    },\n    set current(value) {\n      current = value;\n      if (value != null) {\n        Object.entries(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            event = _ref2[0],\n            callbacks = _ref2[1];\n          callbacks.forEach(function (callback) {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n    isReady: function isReady() {\n      if (current == null) {\n        return false;\n      }\n      return current.isReady();\n    }\n  }, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              var event = args[0],\n                callback = args[1];\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return function () {\n                return removeListener(event, callback);\n              };\n            }\n          case 'removeListener':\n            {\n              var _event = args[0],\n                _callback = args[1];\n              removeListener(_event, _callback);\n              break;\n            }\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        var _current;\n        return (_current = current)[name].apply(_current, args);\n      }\n    };\n    return acc;\n  }, {}));\n  return ref;\n}","map":{"version":3,"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAQA,OAAO,IAAMC,qBAAqB,GAChC,+QADK;AAGP,eAAe,SAASC,4BAAT,GAEmC;EAChD,IAAMC,OAAO,gCACRC,MAAM,CAACC,IAAP,CAAYL,aAAZ,CADW,IAEd,aAFc,EAGd,gBAHc,EAId,WAJc,EAKd,UALc,EAMd,WANc,EAOd,WAPc,EAQd,cARc,EASd,UATc,EAUd,WAVc,EAWd,iBAXc,EAYd,mBAZc,EAAhB;EAeA,IAAMM,SAAuD,GAAG,EAAhE;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAClBC,KADqB,EAErBC,QAFqB,EAGlB;IACH,IAAIH,SAAS,CAACE,KAAD,CAAb,EAAsB;MACpBF,SAAS,CAACE,KAAD,CAAT,GAAmBF,SAAS,CAACE,KAAD,CAAT,CAAiBE,MAAjB,CAAyBC,YAAD;QAAA,OAAQA,EAAE,KAAKF,QAAvC;MAAA,EAAnB;IACD;EACF,CAPD;EASA,IAAIG,OAAiD,GAAG,IAAxD;EAEA,IAAMC,GAAiD;IACrD,IAAID,OAAJ,GAAc;MACZ,OAAOA,OAAP;IACD,CAHuD;IAIxD,IAAIA,OAAJ,CAAYE,KAAZ,EAA6D;MAC3DF,OAAO,GAAGE,KAAV;MAEA,IAAIA,KAAK,IAAI,IAAb,EAAmB;QACjBV,MAAM,CAACW,OAAP,CAAeT,SAAf,EAA0BU,OAA1B,CAAkC,gBAAwB;UAAA;YAAtBR,KAAD;YAAQS,SAAR;UACjCA,SAAS,CAACD,OAAV,CAAmBP,kBAAD,EAAc;YAC9BK,KAAK,CAACI,WAAN,CACEV,KADF,EAEEC,QAFF;UAID,CALD;QAMD,CAPD;MAQD;IACF,CAjBuD;IAkBxDU,OAAO,EAAE,mBAAM;MACb,IAAIP,OAAO,IAAI,IAAf,EAAqB;QACnB,OAAO,KAAP;MACD;MAED,OAAOA,OAAO,CAACO,OAAR,EAAP;IACD;EAxBuD,GAyBrDhB,OAAO,CAACiB,MAAR,CAAoB,UAACC,GAAD,EAAMC,IAAN,EAAe;IACpCD,GAAG,CAACC,IAAD,CAAH,GAAY,YAAoB;MAAA,kCAAhBC,IAAgB;QAAhBA,IAAgB;MAAA;MAC9B,IAAIX,OAAO,IAAI,IAAf,EAAqB;QACnB,QAAQU,IAAR;UACE,KAAK,aAAL;YAAoB;cAClB,IAAOd,KAAD,GAAoBe,IAA1B;gBAAcd,QAAR,GAAoBc,IAA1B;cAEAjB,SAAS,CAACE,KAAD,CAAT,GAAmBF,SAAS,CAACE,KAAD,CAAT,IAAoB,EAAvC;cACAF,SAAS,CAACE,KAAD,CAAT,CAAiBgB,IAAjB,CAAsBf,QAAtB;cAEA,OAAO;gBAAA,OAAMF,cAAc,CAACC,KAAD,EAAQC,QAAR,CAA3B;cAAA;YACD;UACD,KAAK,gBAAL;YAAuB;cACrB,IAAOD,MAAD,GAAoBe,IAA1B;gBAAcd,SAAR,GAAoBc,IAA1B;cAEAhB,cAAc,CAACC,MAAD,EAAQC,SAAR,CAAd;cACA;YACD;UACD;YACEgB,OAAO,CAACC,KAAR,CAAczB,qBAAd;QAAA;MAEL,CAnBD,MAmBO;QAAA;QAEL,OAAOW,mBAAO,EAACU,IAAD,CAAP,iBAAiBC,IAAjB,CAAP;MACD;IACF,CAxBD;IAyBA,OAAOF,GAAP;EACD,CA3BE,EA2BA,EA3BA,EAzBL;EAuDA,OAAOR,GAAP;AACD","names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","filter","cb","current","ref","value","entries","forEach","callbacks","addListener","isReady","reduce","acc","name","args","push","console","error"],"sources":["createNavigationContainerRef.tsx"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}