{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport ViewNativeComponent from \"./ViewNativeComponent\";\nimport TextAncestor from \"../../Text/TextAncestor\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar View = React.forwardRef(function (props, forwardedRef) {\n  return _jsx(TextAncestor.Provider, {\n    value: false,\n    children: _jsx(ViewNativeComponent, _objectSpread(_objectSpread({}, props), {}, {\n      ref: forwardedRef\n    }))\n  });\n});\nView.displayName = 'View';\nmodule.exports = View;","map":{"version":3,"names":["ViewNativeComponent","TextAncestor","React","View","forwardRef","props","forwardedRef","displayName","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Components/View/View.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from './ViewPropTypes';\n\nimport ViewNativeComponent from './ViewNativeComponent';\nimport TextAncestor from '../../Text/TextAncestor';\nimport * as React from 'react';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View: React.AbstractComponent<\n  ViewProps,\n  React.ElementRef<typeof ViewNativeComponent>,\n> = React.forwardRef((props: ViewProps, forwardedRef) => {\n  return (\n    <TextAncestor.Provider value={false}>\n      <ViewNativeComponent {...props} ref={forwardedRef} />\n    </TextAncestor.Provider>\n  );\n});\n\nView.displayName = 'View';\n\nmodule.exports = View;\n"],"mappings":";;;;AAYA,OAAOA,mBAAmB;AAC1B,OAAOC,YAAY;AACnB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAW/B,IAAMC,IAGL,GAAGD,KAAK,CAACE,UAAU,CAAC,UAACC,KAAgB,EAAEC,YAAY,EAAK;EACvD,OACE,KAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE,KAAM;IAAA,UAClC,KAAC,mBAAmB,kCAAKD,KAAK;MAAE,GAAG,EAAEC;IAAa;EAAG,EAC/B;AAE5B,CAAC,CAAC;AAEFH,IAAI,CAACI,WAAW,GAAG,MAAM;AAEzBC,MAAM,CAACC,OAAO,GAAGN,IAAI"},"metadata":{},"sourceType":"module"}