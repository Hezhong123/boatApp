{"ast":null,"code":"\n\nimport PixelRatio from \"../Utilities/PixelRatio\";\nvar cacheBreaker;\nvar warnIfCacheBreakerUnset = true;\nexport function pickScale(scales, deviceScale) {\n  if (deviceScale == null) {\n    deviceScale = PixelRatio.get();\n  }\n  for (var i = 0; i < scales.length; i++) {\n    if (scales[i] >= deviceScale) {\n      return scales[i];\n    }\n  }\n\n  return scales[scales.length - 1] || 1;\n}\nexport function setUrlCacheBreaker(appendage) {\n  cacheBreaker = appendage;\n}\nexport function getUrlCacheBreaker() {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn('AssetUtils.getUrlCacheBreaker: Cache breaker value is unset');\n    }\n    return '';\n  }\n  return cacheBreaker;\n}","map":{"version":3,"names":["PixelRatio","cacheBreaker","warnIfCacheBreakerUnset","pickScale","scales","deviceScale","get","i","length","setUrlCacheBreaker","appendage","getUrlCacheBreaker","__DEV__","console","warn"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Image/AssetUtils.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport PixelRatio from '../Utilities/PixelRatio';\n\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\n\nexport function pickScale(scales: Array<number>, deviceScale?: number): number {\n  if (deviceScale == null) {\n    deviceScale = PixelRatio.get();\n  }\n  // Packager guarantees that `scales` array is sorted\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= deviceScale) {\n      return scales[i];\n    }\n  }\n\n  // If nothing matches, device scale is larger than any available\n  // scales, so we return the biggest one. Unless the array is empty,\n  // in which case we default to 1\n  return scales[scales.length - 1] || 1;\n}\n\nexport function setUrlCacheBreaker(appendage: string) {\n  cacheBreaker = appendage;\n}\n\nexport function getUrlCacheBreaker(): string {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn(\n        'AssetUtils.getUrlCacheBreaker: Cache breaker value is unset',\n      );\n    }\n    return '';\n  }\n  return cacheBreaker;\n}\n"],"mappings":";;AAUA,OAAOA,UAAU;AAEjB,IAAIC,YAAY;AAChB,IAAIC,uBAAuB,GAAG,IAAI;AAElC,OAAO,SAASC,SAAS,CAACC,MAAqB,EAAEC,WAAoB,EAAU;EAC7E,IAAIA,WAAW,IAAI,IAAI,EAAE;IACvBA,WAAW,GAAGL,UAAU,CAACM,GAAG,EAAE;EAChC;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIH,MAAM,CAACG,CAAC,CAAC,IAAIF,WAAW,EAAE;MAC5B,OAAOD,MAAM,CAACG,CAAC,CAAC;IAClB;EACF;;EAKA,OAAOH,MAAM,CAACA,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;AACvC;AAEA,OAAO,SAASC,kBAAkB,CAACC,SAAiB,EAAE;EACpDT,YAAY,GAAGS,SAAS;AAC1B;AAEA,OAAO,SAASC,kBAAkB,GAAW;EAC3C,IAAIV,YAAY,IAAI,IAAI,EAAE;IACxB,IAAIW,OAAO,IAAIV,uBAAuB,EAAE;MACtCA,uBAAuB,GAAG,KAAK;MAC/BW,OAAO,CAACC,IAAI,CACV,6DAA6D,CAC9D;IACH;IACA,OAAO,EAAE;EACX;EACA,OAAOb,YAAY;AACrB"},"metadata":{},"sourceType":"module"}