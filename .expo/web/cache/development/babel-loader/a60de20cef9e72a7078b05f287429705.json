{"ast":null,"code":"\n\n'use strict';\n\nvar defineLazyObjectProperty = require(\"./defineLazyObjectProperty\");\n\nfunction polyfillObjectProperty(object, name, getValue) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    var backupName = \"original\" + name[0].toUpperCase() + name.substr(1);\n    Object.defineProperty(object, backupName, descriptor);\n  }\n  var _ref = descriptor || {},\n    enumerable = _ref.enumerable,\n    writable = _ref.writable,\n    _ref$configurable = _ref.configurable,\n    configurable = _ref$configurable === void 0 ? false : _ref$configurable;\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false\n  });\n}\nfunction polyfillGlobal(name, getValue) {\n  polyfillObjectProperty(global, name, getValue);\n}\nmodule.exports = {\n  polyfillObjectProperty: polyfillObjectProperty,\n  polyfillGlobal: polyfillGlobal\n};","map":{"version":3,"names":["defineLazyObjectProperty","require","polyfillObjectProperty","object","name","getValue","descriptor","Object","getOwnPropertyDescriptor","__DEV__","backupName","toUpperCase","substr","defineProperty","enumerable","writable","configurable","console","error","get","polyfillGlobal","global","module","exports"],"sources":["/Users/hez/code/boatApp/node_modules/react-native/Libraries/Utilities/PolyfillFunctions.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst defineLazyObjectProperty = require('./defineLazyObjectProperty');\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. The property will be\n * replaced with a lazy getter.\n *\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\n * so that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nfunction polyfillObjectProperty<T>(\n  object: {...},\n  name: string,\n  getValue: () => T,\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\n    Object.defineProperty(object, backupName, descriptor);\n  }\n\n  const {enumerable, writable, configurable = false} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false,\n  });\n}\n\nfunction polyfillGlobal<T>(name: string, getValue: () => T): void {\n  polyfillObjectProperty(global, name, getValue);\n}\n\nmodule.exports = {polyfillObjectProperty, polyfillGlobal};\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAMA,wBAAwB,GAAGC,OAAO,8BAA8B;;AAetE,SAASC,sBAAsB,CAC7BC,MAAa,EACbC,IAAY,EACZC,QAAiB,EACX;EACN,IAAMC,UAAU,GAAGC,MAAM,CAACC,wBAAwB,CAACL,MAAM,EAAEC,IAAI,CAAC;EAChE,IAAIK,OAAO,IAAIH,UAAU,EAAE;IACzB,IAAMI,UAAU,gBAAcN,IAAI,CAAC,CAAC,CAAC,CAACO,WAAW,EAAE,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAG;IACtEL,MAAM,CAACM,cAAc,CAACV,MAAM,EAAEO,UAAU,EAAEJ,UAAU,CAAC;EACvD;EAEA,WAAqDA,UAAU,IAAI,CAAC,CAAC;IAA9DQ,UAAU,QAAVA,UAAU;IAAEC,QAAQ,QAARA,QAAQ;IAAA,yBAAEC,YAAY;IAAZA,YAAY,kCAAG,KAAK;EACjD,IAAIV,UAAU,IAAI,CAACU,YAAY,EAAE;IAC/BC,OAAO,CAACC,KAAK,CAAC,0BAA0B,GAAGd,IAAI,GAAG,uBAAuB,CAAC;IAC1E;EACF;EAEAJ,wBAAwB,CAACG,MAAM,EAAEC,IAAI,EAAE;IACrCe,GAAG,EAAEd,QAAQ;IACbS,UAAU,EAAEA,UAAU,KAAK,KAAK;IAChCC,QAAQ,EAAEA,QAAQ,KAAK;EACzB,CAAC,CAAC;AACJ;AAEA,SAASK,cAAc,CAAIhB,IAAY,EAAEC,QAAiB,EAAQ;EAChEH,sBAAsB,CAACmB,MAAM,EAAEjB,IAAI,EAAEC,QAAQ,CAAC;AAChD;AAEAiB,MAAM,CAACC,OAAO,GAAG;EAACrB,sBAAsB,EAAtBA,sBAAsB;EAAEkB,cAAc,EAAdA;AAAc,CAAC"},"metadata":{},"sourceType":"script"}